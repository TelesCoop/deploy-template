{{ ansible_managed | comment }}

server {

    {% if https_enabled -%}
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/{{ certificate_hostname }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ certificate_hostname }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    {% else -%}
    listen 80;
    {% endif %}

    server_name {{ " ".join(all_hostnames) }};

    access_log /var/log/nginx/access_{{ main_hostname.replace('.', '_') }}.log;
    error_log /var/log/nginx/error_{{ main_hostname.replace('.', '_') }}.log;

    {% for hostname in redirect_hostnames -%}
    if ($host = {{ hostname }}) {
        return 301 https://{{ main_hostname }}$request_uri;
    }
    {% endfor %}

    # Deny illegal Host headers
    if ($host !~* ^({{ "|".join(all_hostnames) }})$ ) {
        return 444;
    }

    # Serve static assets (like logo)
    location ~ \.(png|jpg|jpeg|gif|svg|ico)$ {
        root {{ frontend_static_path }};
        try_files $uri =404;
    }

    # Serve maintenance page for all requests
    location / {
        root {{ frontend_static_path }};
        try_files /{{ maintenance_page }} =503;
    }

    # Optional: Allow access from specific IPs (uncomment and configure if needed)
    # set $maintenance 1;
    # if ($remote_addr ~ "^(YOUR_IP_ADDRESS)$") {
    #     set $maintenance 0;
    # }
    # if ($maintenance = 0) {
    #     return 404; # Or proxy to normal backend
    # }

}

{% if https_enabled %}
server {
    {% for hostname in public_hostnames -%}
    if ($host = {{ hostname }}) {
        return 301 https://$host$request_uri;
    }
    {% endfor %}

    {% for hostname in redirect_hostnames -%}
    if ($host = {{ hostname }}) {
        return 301 https://{{ main_hostname }}$request_uri;
    }
    {% endfor %}

    server_name {{ " ".join(all_hostnames) }};

    listen 80;
    return 404;
}
{% endif %}
