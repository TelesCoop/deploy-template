- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/{{ project_slug }}
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: Update sources for node
  shell:
    cmd: >
            curl -fsSL https://deb.nodesource.com/setup_16.x
            | sudo -E bash -
            && touch /{{ organization_slug }}/{{ project_slug}}/node_setup
    warn: false
    creates: /{{ organization_slug }}/{{ project_slug}}/node_setup

- name: install node
  apt:
    pkg:
      - nodejs
    state: present

- name: get latest frontend code
  git:
    repo: '{{ frontend_repo }}'
    dest: "{{ frontend_path }}"
    key_file: "{{ identity_file_path }}"
    accept_hostkey: true
    force: true
    version: "{{ frontend_branch }}"
  become_user: "{{ main_user }}"
  register: clonecode

- name: add environment variable file
  template:
    src: frontend.env
    dest: "{{ frontend_path }}/.env"

- name: Install node dependencies
  command:
    cmd: "npm install"
    chdir: "{{ frontend_path }}"
  when: clonecode.changed

- name: Build frontend code
  command:
    cmd: "npm run build"
    chdir: "{{ frontend_path }}"
  when: clonecode.changed

- name: update fontend static folder
  file:
    path: "{{ frontend_static_path }}"
    state: "{{ item }}"
    owner: www-data
    mode: '2755'
  with_items:
    - absent
    - directory

- name: update fontend static folder content
  synchronize:
    src: "{{ frontend_path }}/dist/"
    dest: "{{ frontend_static_path }}/"
    rsync_opts:
      - "-og"
      - "--chown=www-data"

  delegate_to: "{{ inventory_hostname }}"
