- name: Remove default nginx config
  file:
    state: absent
    dest: /etc/nginx/sites-enabled/default
  notify:
    - reload nginx

- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/{{ project_slug }}
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: Update sources for node
  shell:
    cmd: >
            curl -fsSL https://deb.nodesource.com/setup_18.x
            | sudo -E bash -
            && touch /{{ organization_slug }}/{{ project_slug}}/node_setup
    warn: false
    creates: /{{ organization_slug }}/{{ project_slug}}/node_setup

- name: install node
  apt:
    pkg:
      - nodejs
    state: present

- name: install yarn globally
  community.general.npm:
    name: yarn
    global: true

- name: Install n (Manager for node versions)
  command:
    cmd: yarn install -g n
    creates: "/usr/local/n/"

- name: Generate frontend /etc/ssh/ RSA host key
  command: "ssh-keygen -q -t ed25519 -a 100 -f {{ frontend_identity_file_path }} -C \"\" -N \"\""
  become_user: "{{ main_user }}"
  args:
    creates: "{{ frontend_identity_file_path }}"
  register: frontend_new_ssh_key

- name: WARNING ABOUT new ssh key
  debug:
    msg: |
      IMPORTANT REMINDER

      A new ssh key has been generated at {{ frontend_identity_file_path }}
      - it should be added to the project deploy keys in Gitlab/Github
      so that we can clone it.
  when: frontend_new_ssh_key.changed

- name: Get new ssh key contents
  command: "cat {{ frontend_identity_file_path }}.pub"
  register: command_output
  when: frontend_new_ssh_key.changed

- name: Print ssh key to console
  debug:
    msg: "{{command_output.stdout}}"
  when: frontend_new_ssh_key.changed

- name: get latest frontend code
  git:
    repo: '{{ frontend_repo }}'
    dest: "{{ frontend_path }}"
    key_file: "{{ frontend_identity_file_path }}"
    accept_hostkey: true
    force: true
    version: "{{ frontend_branch }}"
  become_user: "{{ main_user }}"
  register: clonecode

- name: Get node_version
  shell: "cat {{ frontend_path }}/.nvmrc"
  register: node_version

- name: Install node with n
  command:
    cmd: "n {{ node_version.stdout }}"
    creates: "/usr/local/n/versions/node/{{ node_version.stdout }}"


- name: add environment variable file
  template:
    src: frontend.env
    dest: "{{ frontend_path }}/.env"

- name: Install project node dependencies with yarn
  command:
    cmd: "n exec {{ node_version.stdout }} yarn install --frozen-lockfile"
    chdir: "{{ frontend_path }}"
  become_user: "{{ main_user }}"
  when: clonecode.changed or force_update is defined

###############################
# STATIC CONFIG
- name: Static config
  block:
    - name: Build frontend code for static rendering
      command:
        cmd: "n exec {{ node_version.stdout }} yarn generate"
        chdir: "{{ frontend_path }}"
      when: clonecode.changed or force_update is defined
      register: build_code

    - name: Update fontend static folder
      file:
        path: "{{ frontend_static_path }}"
        state: "{{ item }}"
        owner: www-data
        mode: '2755'
      with_items:
        - absent
        - directory
      when: clonecode.changed or force_update is defined

    - name: update frontend static folder content
      synchronize:
        src: "{{ frontend_path }}/dist/"
        dest: "{{ frontend_static_path }}/"
        rsync_opts:
          - "-og"
          - "--chown=www-data"
      delegate_to: "{{ inventory_hostname }}"
      when: clonecode.changed or force_update is defined

  when: frontend_mode == 'static'


###############################
# SSR CONFIG
- name: SSR config
  block:
    - name: Build frontend code for SSR
      command:
        cmd: "n exec {{ node_version.stdout }} yarn build"
        chdir: "{{ frontend_path }}"
      register: build_code
      when: clonecode.changed or force_update is defined

    - debug: msg="{{ build_code.stdout }}"
      when: clonecode.changed

    - name: Copy supervisord config to {{ supervisor_conf }}/{{ project_slug }}_backend.conf
      template:
        src: frontend-supervisor.conf.j2
        dest: "{{ supervisor_conf }}/{{ project_slug }}_frontend.conf"
        owner: root
        group: root
        mode: 0644

    - name: Install {{ project_slug }}-frontend supervisor
      supervisorctl:
        name: "{{ project_slug }}-frontend"
        state: present

    - name: Restart {{ project_slug }}-frontend supervisor
      supervisorctl:
        name: "{{ project_slug }}-frontend"
        state: restarted
      when: clonecode.changed or force_update is defined

  when: frontend_mode == 'SSR'
